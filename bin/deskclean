#!/usr/bin/env ruby

#
# # DeskClean
#
# Cleanup files on your desktop by moving them to directories depending on
# file extension (e.g., *.jpg goes to images/).
#
#
# ## Usage:
#
#     deskclean
#
# Force overwriting existing files:
#
#     deskclean -f
#
# Cleanup a different directory:
#
#     deskclean -p ~/Downloads
#
#
# ## Installation:
#
#     chmod +x deskclean && mv deskclean /usr/local/bin
#

require 'fileutils'
require 'optparse'

@options = { path: '~/Desktop', timestamp: true, force: false, dry_run: false }

OptionParser.new do |opts|
  opts.banner = "usage: #{File.basename($0)} [options]"
  opts.on('-t', '--dont-timestamp', 'dont prepend date to destination') { @options[:timestamp] = false }
  opts.on('-f', '--force', 'overwrite existing files') { @options[:force] = true }
  opts.on('-p', '--path path', 'path to desktop [default=~/Desktop]') { |path| @options[:path] = path }
  opts.on('-d', '--dry-run', 'dont actually move anything') { @options[:dry_run] = true }
end.parse!

@options.freeze

# cleanup my desktop

DESKTOP = File.expand_path(@options[:path])

# directories
file_types = {
  /.*\.(ab1|csv|sam|fasta|fastq|fa|fna|faa|gbk?|gbf|gff|aln|zip|tar\.gz|xlsx?)(\.gz)?$/i => 'data',
  /.*\.(rtf|rtfd|md|txt|docx?|rtf|html?|pdf)$/i => 'textfiles',
  /.*\.(mp3)$/i => 'music',
  /.*\.(rmd|sql|pl|py|sh|rb|js|ts|coffee|c)$/i => 'scripts',
  /.*\.(svg|jpe?g|png|gif|bmp|mp4|ai)$/i => 'images'
}

file_types.values.each do |directory_name|
  FileUtils.mkdir_p(File.join(DESKTOP, directory_name))
end

filenames = Dir.entries(DESKTOP)

TIMESTAMP = Time.now.to_i

filenames.each do |filename|
  destinations =
    file_types.
    each_pair.
    to_a.
    keep_if { |re, d| filename =~ re }

  if destinations.size == 1
    
    destination_filename =
      if @options[:timestamp]
        "#{TIMESTAMP}-#{filename}" 
      else
        filename
      end

    destination =
      begin
        dest = File.join(File.expand_path(destinations.first.last, DESKTOP), destination_filename)
      end

    source =
      File.expand_path(filename, DESKTOP)

    if File.exists? destination and not @options[:force]
      puts "x #{destination} already exists"
    else
      puts "-> #{destination}"
      File.rename(source, destination) unless @options[:dry_run]
    end
  elsif destinations.size > 1
    puts "?? #{filename} #{destinations.map(&:last)} [ambiguous]"
  end
end
